#!/usr/bin/env luajit

--
-- Copyright (c) 2022 Gabriel G. de Brito
-- 
-- Permission is hereby granted, free of charge, to any person obtaining a copy of 
-- this software and associated documentation files (the “Software”), to deal 
-- in the Software without restriction, including without limitation the rights to 
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
-- of the Software, and to permit persons to whom the Software is furnished to do 
-- so, subject to the following conditions:
-- 
-- The above copyright notice and this permission notice shall be included in all 
-- copies or substantial portions of the Software.
-- 
-- THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
-- SOFTWARE.
--

-- sleep facility
sleep = function(x)
    os.execute("sleep " .. x)
end

-- notifier facility
notify = function(title, msg, is_urgent)
    if not msg then msg = "" end
    if not is_urgent then
        os.execute("notify-send '" .. title .. "' '" .. msg .. "'")
    else
        os.execute("notify-send --urgency=critical '" .. title .. "' '" .. msg .. "'")
    end
end

-- battery getter function
getbat = function()
    local valuefile  = io.open("/sys/class/power_supply/BAT1/capacity", "r")
    local statusfile = io.open("/sys/class/power_supply/ADP1/online", "r")

    value, status = valuefile:read() + 0, statusfile:read() + 0
    
    valuefile:close()
    statusfile:close()

    return value, status
end


sleep(10)
-- main loop
repeat
    value, status = getbat()

    if status == 1 then

        -- on plug
        if not plugged then
            plugged   = true
            notified  = false
            alerted   = false
            notify("Charger connected.")
        end
        
        -- on full
        if value == 100 and not not_full then
            not_full = true
            notify("Battery is full", "You can disconnected the charger now.")
        end

    else -- Discharging

        -- on unplug
        if plugged then
            plugged = false
            notify("Charger disconnected.")
        end

        -- on full disconnected
        if not_full then 
            not_full = false 
        end

        -- on critical
        if value <= 10 and not alerted then
            alerted = true
            notify("Critical battery level", "Battery level is below 10%. Please connect the computer to the charger immediately.", true)
        -- on low
        elseif value <= 20 and not notified then
            notified = true
            notify("Low battery level", "Battery level is below 20%. Please connect the computer to the charger.")
        end
    end

    sleep(10)
until false
